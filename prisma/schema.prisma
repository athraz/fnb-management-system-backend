// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  username String @unique @db.VarChar(100)
  password String @db.VarChar(100)
  role String @db.VarChar(100)
  orders Order[]
}

model Restaurant {
  id String @id @default(uuid())
  name String @db.VarChar(100)
  location String @db.VarChar(100)
  menus Menu[]
}

model Category {
  id String @id @default(uuid())
  name String @db.VarChar(100)
  menus Menu[]
}

model Menu {
  id String @id @default(uuid())
  name String @db.VarChar(100)
  imageUrl String @db.VarChar(100)
  price Decimal @db.Decimal(10, 2)
  stock Decimal @db.Decimal(10, 0)
  restaurantId String
  categoryId String
  orderMenus OrderMenu[]

  restaurant Restaurant @relation(fields: [restaurantId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])
}

model Order {
  id String @id @default(uuid())
  status String @db.VarChar(100)
  address String @db.VarChar(100)
  userId String
  orderMenus OrderMenu[]

  user User @relation(fields: [userId], references: [id])
}

model OrderMenu {
  menuId String
  orderId String

  menu Menu @relation(fields: [menuId], references: [id])
  order Order @relation(fields: [orderId], references: [id])

  @@id([menuId, orderId]) 
}